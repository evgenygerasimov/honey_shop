services:
  postgres:
    image: 'postgres:latest'
    container_name: postgres
    environment:
      - 'POSTGRES_DB=${POSTGRES_DB}'
      - 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD}'
      - 'POSTGRES_USER=${POSTGRES_USER}'
    ports:
      - '5432:5432'
    networks:
      - honey_net

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - '6379:6379'
    environment:
      - 'REDIS_PASSWORD=${REDIS_PASSWORD}'
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    networks:
      - honey_net

  lamp-server:
    image: php:8.2-apache
    container_name: lamp-server
    ports:
      - "8080:80"
    volumes:
      - ./service.php:/var/www/html/service.php
    environment:
      - 'CDEK_LOGIN=${CDEK_LOGIN}'
      - 'CDEK_PASSWORD=${CDEK_PASSWORD}'
    restart: always
    networks:
      - honey_net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - honey_net
    healthcheck:
      test: [ "CMD", "echo", "ruok", "|", "nc", "localhost", "2181" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_PORT: 9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper
    networks:
      - honey_net

  honey-shop-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: honey-shop-app
    ports:
      - '8443:8443'
      - '5005:5005'
    environment:
      JAVA_TOOL_OPTIONS: >-
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      DB_DATASOURCE: ${DB_DATASOURCE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      MYAPP_SECRET_KEY: ${MYAPP_SECRET_KEY}
      MYAPP_SHOP_ID: ${MYAPP_SHOP_ID}
      MYAPP_SHOP_YOOKASSA_API_KEY: ${MYAPP_SHOP_YOOKASSA_API_KEY}
      KEY_STORE_PASSWORD: ${KEY_STORE_PASSWORD}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT-ID: ${OAUTH2_CLIENT_ID}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT-SECRET: ${OAUTH2_CLIENT_SECRET}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_REDIRECT-URI: ${OAUTH2_REDIRECT_URI}
    volumes:
      - ./uploads:/app/uploads/img
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - honey_net

networks:
    honey_net:
      external: true
